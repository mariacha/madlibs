<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * Implements hook_menu().
 *
 * Adds a page that displays some text.
 */
function madlibs_menu() {
   $items['madlib'] = array(
      'title' => "Madlib viewer",
      'page callback' => 'madlib_viewer',
      'access callback' => TRUE,
    );
    return $items;
}

/**
 * Page callback to show a madlib form and results.
 */
function madlib_viewer() {

  drupal_add_js(drupal_get_path('module', 'madlibs') .'/js/madlibs_maker.js', 'file');

  $text = theme('madlib');

  return $text;
}

/**
 * Implements hook_block_info().
 *
 * Adds a block to show a silly picture when the madlib is completed.
 */
function madlibs_block_info() {
  $blocks['madlib_picture'] = array(
    'info' => t('Madlib silly picture'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Tells Drupal how to display the block declared above.
 */
function madlibs_block_view($delta = ''){
  $block = array();

  if ($delta == 'madlib_picture') {
    $file_id = variable_get('funny_picture', '');
    $file = file_load($file_id);

    $block['content'] = array(
      '#theme' => 'image',
      '#path' => $file->uri,
      '#height' => 168,
      '#width' => 164,
      '#attributes' => array('id' => 'funny-picture'),
    );
  }

  return $block;
}

/**
 * Implememnts hook_theme($existing, $type, $theme, $path)
 *
 * Declares a template for our madlib page.
 */
function madlibs_theme($existing, $type, $theme, $path) {
  $themes = array (
    'madlib' => array(
      'path' => drupal_get_path('module', 'madlibs') .'/templates',
      'template' => 'madlib',
    ),
  );

  return $themes;
}

/**
 * Implements hook_block_configure().
 *
 * Adds a file upload to the block to set a funny picture.
 */
function madlibs_block_configure($delta = '') {
  $form = array();
  if ($delta == 'madlib_picture') {
    $form['madlib_picture_fid'] = array(
      '#type' => 'managed_file',
      '#title' => t('Funny photo'),
      '#description' => t('The photo that will display when a user submits a madlib.'),
      '#default_value' => variable_get('funny_picture', ''),
      '#upload_location' => 'public://',
      '#upload_validators' => array(
        'file_validate_is_image',
      ),
      '#required' => TRUE,
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * Saves the funny picture the user uploads.
 */
function madlibs_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'madlib_picture' :
      // Saving the file, setting it to a permanent state, setting a FID variable
      $file = file_load($edit['madlib_picture_fid']);
      $file->status = FILE_STATUS_PERMANENT;
      file_save($file);
      $block = block_load('madlibs', $delta);
      file_usage_add($file, 'madlibs', 'block', $block->bid);
      variable_set('funny_picture', $file->fid);
      break;
  }
}
